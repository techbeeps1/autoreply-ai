<?php
if (! defined('ABSPATH')) {
    exit;
}

function autoreply_ai_get_ai_reply($comment_content, $post_content, $handler = false)
{
    $without_reply_enable = get_option('autoreply_ai_without_reply_enable');
    $generated_ai_notic_enable = get_option('autoreply_ai_generated_ai_notic_enable');

    if ($without_reply_enable == 1) {
        return get_option('autoreply_ai_auto_reply_msg');
    }

    $post_content  = autoreply_ai_clean_text_tbs($post_content);
    $comment_content  = autoreply_ai_clean_text_tbs($comment_content);

    if ($generated_ai_notic_enable == 1) {
        $generated_ai_notic = '<h6>' . get_option('autoreply_ai_generated_ai_notic', 'ðŸ¤– This reply is generated by AI. If you need further clarification, feel free to ask!') . '</h6>';
    } else {
        $generated_ai_notic = '';
    }

    $word_limit = get_option('autoreply_ai_word_limit', 30);
    $api_key = get_option('autoreply_ai_api_key');
    $user_email = get_option('autoreply_email');
    $ai_model  = get_option('autoreply_ai_selected_model', '');
    if ($ai_model == '') {
        $ai_model = 'gpt-3.5-turbo';
    }
    $autoreply_ai_prompt_add = get_option('autoreply_ai_prompt_add');
    if (!empty($autoreply_ai_prompt_add)) {
        $autoreply_ai_prompt_add = 'additional prompt "' . $autoreply_ai_prompt_add . '"';
    }
    $user_key = substr(hash('sha256', $user_email), 0, 16);
    if (get_option('autoreply_ai_activated')) {
        // Set up the request to the OpenAI API
        $data = array(
            'model' => $ai_model, // Or use the appropriate model
            'messages' => array(
                array(
                    'role' => 'user',
                    'content'   => "Return response only complete or valid JSON,must this format only - {\"valid\": true,\"comment_type\":\" e.g.,span,abusive\",\"response\":\"Generated human-like reply based on the comment and post content.\"} Read the comment:\" $comment_content \" and analyze whether it is relevant, meaningful, and makes sense in the context of the post: \"$post_content\".
 - If the comment is meaningful and relevant, generate a natural and human language reply in $word_limit words.  
 - If the comment meets any of the following conditions, mark it as invalid:
  - Contains only numbers, random characters, or gibberish.
  - Is too short (e.g., single words like 'nice,' 'good,' 'bad').
  - Is spam or promotional content.
  - Contains abusive, violent, or offensive language. $autoreply_ai_prompt_add"
                ),
            ),
            'max_tokens' => 300, // Adjust the number of tokens as needed
            'temperature' => 0.7, // Adjust creativity
        );

        $json_data = json_encode($data);
        $response = wp_remote_post('https://api.openai.com/v1/chat/completions', array(
            'method'    => 'POST',
            'body'      => $json_data,
            'headers'   => array(
                'Content-Type'  => 'application/json',
                'Authorization' => 'Bearer ' . openssl_decrypt($api_key, 'AES-256-CBC', $user_key, 0, $user_key),
            ),
            'timeout'   => 120, // Adjust timeout if needed
            'blocking'    => true,
        ));


        if (is_wp_error($response)) {
            return false; // Handle the error appropriately
        }

        $response  = wp_remote_retrieve_body($response);


        // Decode the response and return the AI-generated reply
        $decoded_response = json_decode($response, true);
        if (isset($decoded_response['error']['message']) and $decoded_response['error']['message']) {

            if ($handler == true) {
                wp_redirect(admin_url('edit-comments.php?reply_with_ai_error=' . $decoded_response['error']['message']));
            } else {
                return false;
            }
            exit;
        }


        if (isset($decoded_response['choices'][0]['message']['content'])) {
            $ai_reply = $decoded_response['choices'][0]['message']['content'];
            $ai_reply = json_decode($ai_reply, true);
            if ($ai_reply['valid'] == true) {
                return $generated_ai_notic . trim($ai_reply['response']);
            }
            return false;
        } else {
            return false;
        }
    }
}
function autoreply_ai_clean_text_tbs($text)
{
    $text =  wp_strip_all_tags($text, true); // Remove HTML tags
    $text = preg_replace('/[^\w\s]/', '', $text); // Remove special characters
    $text = preg_replace('/\s+/', ' ', $text); // Remove extra spaces
    return trim($text);
}